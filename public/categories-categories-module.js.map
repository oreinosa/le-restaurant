{"version":3,"sources":["webpack:///./src/app/admin/categories/categories-routing.module.ts","webpack:///./src/app/admin/categories/categories.component.html","webpack:///./src/app/admin/categories/categories.component.scss","webpack:///./src/app/admin/categories/categories.component.ts","webpack:///./src/app/admin/categories/categories.module.ts","webpack:///./src/app/admin/categories/create/create.component.html","webpack:///./src/app/admin/categories/create/create.component.scss","webpack:///./src/app/admin/categories/create/create.component.ts","webpack:///./src/app/admin/categories/delete/delete.component.html","webpack:///./src/app/admin/categories/delete/delete.component.scss","webpack:///./src/app/admin/categories/delete/delete.component.ts","webpack:///./src/app/admin/categories/list/list.component.html","webpack:///./src/app/admin/categories/list/list.component.scss","webpack:///./src/app/admin/categories/list/list.component.ts","webpack:///./src/app/admin/categories/update/update.component.html","webpack:///./src/app/admin/categories/update/update.component.scss","webpack:///./src/app/admin/categories/update/update.component.ts","webpack:///./src/app/shared/classes/category.ts"],"names":[],"mappings":"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","file":"categories-categories-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { DeleteComponent } from './delete/delete.component';\nimport { UpdateComponent } from './update/update.component';\nimport { CreateComponent } from './create/create.component';\nimport { CategoriesComponent } from './categories.component';\n\nconst routes: Routes = [\n  {\n    path: '', component: CategoriesComponent, children: [\n      { path: 'add', component: CreateComponent },\n      { path: 'update', component: UpdateComponent },\n      { path: 'update/:_id', component: UpdateComponent },\n      { path: 'delete', component: DeleteComponent },\n      { path: 'delete/:_id', component: DeleteComponent },\n    ]\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class CategoriesRoutingModule { }\n","module.exports = \"<router-outlet></router-outlet>\\n<mat-card>\\n  <mat-card-header>\\n    <mat-card-title>\\n      <h2>Categories</h2>\\n    </mat-card-title>\\n  </mat-card-header>\\n  <mat-card-content>\\n    <app-list></app-list>\\n  </mat-card-content>\\n</mat-card>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-categories',\n  templateUrl: './categories.component.html',\n  styleUrls: ['./categories.component.scss']\n})\nexport class CategoriesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { SharedModule } from './../../shared/shared.module';\nimport { NgModule } from '@angular/core';\n\nimport { CategoriesRoutingModule } from './categories-routing.module';\nimport { CategoriesComponent } from './categories.component';\nimport { CreateComponent } from './create/create.component';\nimport { DeleteComponent } from './delete/delete.component';\nimport { UpdateComponent } from './update/update.component';\nimport { ListComponent } from './list/list.component';\n\n@NgModule({\n  imports: [\n    SharedModule,\n    CategoriesRoutingModule\n  ],\n  declarations: [CategoriesComponent, CreateComponent, DeleteComponent, UpdateComponent, ListComponent]\n})\nexport class CategoriesModule { }\n","module.exports = \"<form #f='ngForm' (ngSubmit)='onSubmit(f)'>\\r\\n  <mat-card>\\r\\n    <mat-card-header>\\r\\n      <mat-card-title>\\r\\n        <h2>Add category</h2>\\r\\n      </mat-card-title>\\r\\n    </mat-card-header>\\r\\n    <mat-card-content>\\r\\n      <mat-form-field>\\r\\n        <input matInput type=\\\"text\\\" placeholder='Name' [(ngModel)]='category.name' name='name' required [readonly]='f.submitted'>\\r\\n      </mat-form-field>\\r\\n      <mat-form-field>\\r\\n        <input matInput type=\\\"text\\\" placeholder='Description' [(ngModel)]='category.description' name='description' required [readonly]='f.submitted'>\\r\\n      </mat-form-field>\\r\\n    </mat-card-content>\\r\\n    <mat-card-actions>\\r\\n      <button mat-button type='submit' [disabled]='f.invalid || f.submitted'>Submit</button>\\r\\n      <button mat-button type='button' routerLink='../' [disabled]='f.submitted'>Cancel</button>\\r\\n    </mat-card-actions>\\r\\n  </mat-card>\\r\\n</form>\"","module.exports = \"\"","import { CategoriesService } from \"./../categories.service\";\r\nimport { Router, ActivatedRoute } from \"@angular/router\";\r\nimport { NotificationsService } from \"./../../../notifications/notifications.service\";\r\nimport { Component } from \"@angular/core\";\r\nimport { Category } from \"../../../shared/classes/category\";\r\nimport { Create } from \"../../../shared/classes/create\";\r\n@Component({\r\n  selector: \"app-create\",\r\n  templateUrl: \"./create.component.html\",\r\n  styleUrls: [\"./create.component.scss\", \"../../styles/crud.scss\"]\r\n})\r\nexport class CreateComponent extends Create<Category> {\r\n  category = new Category();\r\n  constructor(\r\n    public categoriesService: CategoriesService,\r\n    public router: Router,\r\n    public route: ActivatedRoute,\r\n    public notifications: NotificationsService\r\n  ) {\r\n    super(categoriesService, notifications, router, route);\r\n  }\r\n}\r\n","module.exports = \"<mat-card>\\n  <mat-card-header>\\n    <mat-card-title>\\n      <h2>Delete {{service.className}}</h2>\\n    </mat-card-title>\\n  </mat-card-header>\\n  <mat-card-content>\\n    <ng-container *ngIf='object;else loading'>\\n      <p>Delete {{service.className}} {{ object?._id }}</p>\\n    </ng-container>\\n    <ng-template #loading>\\n      <mat-spinner class=\\\"col-12 mx-auto\\\"></mat-spinner>\\n    </ng-template>\\n  </mat-card-content>\\n  <mat-card-actions>\\n    <button mat-button type='button' (click)='onSubmit()'>Yes</button>\\n    <button mat-button type='button' routerLink='../../'>No</button>\\n  </mat-card-actions>\\n</mat-card>\"","module.exports = \"\"","import { CategoriesService } from \"./../categories.service\";\r\nimport { Router, ActivatedRoute } from \"@angular/router\";\r\nimport { Component } from \"@angular/core\";\r\nimport { NotificationsService } from \"../../../notifications/notifications.service\";\r\nimport { Delete } from \"../../../shared/classes/delete\";\r\nimport { Category } from \"../../../shared/classes/category\";\r\n\r\n@Component({\r\n  selector: \"app-delete\",\r\n  templateUrl: \"./delete.component.html\",\r\n  styleUrls: [\"./delete.component.scss\", \"../../styles/crud.scss\"]\r\n})\r\nexport class DeleteComponent extends Delete<Category> {\r\n  constructor(\r\n    public service: CategoriesService,\r\n    public notifications: NotificationsService,\r\n    public router: Router,\r\n    public route: ActivatedRoute\r\n  ) {\r\n    super(service, notifications, router, route);\r\n  }\r\n}\r\n","module.exports = \"<button mat-button type='button' routerLink='add'>Add category</button>\\r\\n<div class=\\\"table-container\\\">\\r\\n  <table mat-table [dataSource]=\\\"dataSource\\\" class=\\\"mat-elevation-z0\\\">\\r\\n\\r\\n    <!-- ID Column -->\\r\\n    <!-- <ng-container matColumnDef=\\\"id\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> ID </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n        {{element._id}}\\r\\n      </td>\\r\\n    </ng-container> -->\\r\\n\\r\\n    <!-- Name Column -->\\r\\n    <ng-container matColumnDef=\\\"name\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Name </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n        {{element.name}}\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Description Column -->\\r\\n    <ng-container matColumnDef=\\\"description\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Description </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n        {{element.description}}\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Actions Column -->\\r\\n    <ng-container matColumnDef=\\\"actions\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Actions </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n        <button mat-button type='button' (click)='onAction(\\\"update\\\",element)'>Update</button>\\r\\n        <button mat-button type='button' (click)='onAction(\\\"delete\\\",element)'>Delete</button>\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n  </table>\\r\\n  <ng-container *ngIf='loading'>\\r\\n    <mat-spinner class=\\\"mx-auto my-3\\\"></mat-spinner>\\r\\n  </ng-container>\\r\\n</div>\\r\\n<mat-paginator [length]='dataSource?.data?.length' [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\"></mat-paginator>\"","module.exports = \".mat-column-id {\\n  width: 5%;\\n  overflow-wrap: break-word; }\\n\\n.mat-column-name {\\n  width: 20%; }\\n\\n.mat-column-description {\\n  width: 40%; }\\n\\n.mat-column-actions {\\n  width: 20%; }\\n\\n.mat-table {\\n  min-width: 700px; }\\n\"","import { Component } from \"@angular/core\";\r\nimport { CategoriesService } from \"../categories.service\";\r\nimport { Category } from \"../../../shared/classes/category\";\r\nimport { Router } from \"@angular/router\";\r\nimport { List } from \"../../../shared/classes/list\";\r\n\r\n@Component({\r\n  selector: \"app-list\",\r\n  templateUrl: \"./list.component.html\",\r\n  styleUrls: [\"./list.component.scss\", \"../../styles/crud.scss\", \"../../styles/list.scss\"]\r\n})\r\n\r\nexport class ListComponent extends List<Category> {\r\n  constructor(\r\n    public service: CategoriesService,\r\n    public router: Router,\r\n  ) {\r\n    super(\r\n      service,\r\n      router,\r\n      [\"name\", \"description\", \"actions\"]\r\n    );\r\n  }\r\n}\r\n","module.exports = \"<form #f='ngForm' (ngSubmit)='onSubmit(f)'>\\r\\n  <mat-card>\\r\\n    <mat-card-header>\\r\\n      <mat-card-title>\\r\\n        <h2>Edit category</h2>\\r\\n      </mat-card-title>\\r\\n    </mat-card-header>\\r\\n    <mat-card-content>\\r\\n      <ng-container *ngIf='object as category'>\\r\\n        <mat-form-field>\\r\\n          <input matInput type=\\\"text\\\" placeholder='Name' [ngModel]='category.name' name='name' required [readonly]='f.submitted'>\\r\\n        </mat-form-field>\\r\\n        <mat-form-field>\\r\\n          <input matInput type=\\\"text\\\" placeholder='Description' [ngModel]='category.description' name='description' required [readonly]='f.submitted'>\\r\\n        </mat-form-field>\\r\\n      </ng-container>\\r\\n    </mat-card-content>\\r\\n    <mat-card-actions>\\r\\n      <button mat-button type='submit' [disabled]='f.invalid || f.submitted'>Submit</button>\\r\\n      <button mat-button type='button' routerLink='../../' [disabled]='f.submitted'>Cancel</button>\\r\\n    </mat-card-actions>\\r\\n  </mat-card>\\r\\n</form>\"","module.exports = \"\"","import { Component } from \"@angular/core\";\r\nimport { Category } from \"../../../shared/classes/category\";\r\nimport { Router, ActivatedRoute } from \"@angular/router\";\r\nimport { CategoriesService } from \"../categories.service\";\r\nimport { NotificationsService } from \"./../../../notifications/notifications.service\";\r\nimport { Update } from \"../../../shared/classes/update\";\r\n\r\n@Component({\r\n  selector: \"app-update\",\r\n  templateUrl: \"./update.component.html\",\r\n  styleUrls: [\"./update.component.scss\", \"../../styles/crud.scss\"]\r\n})\r\nexport class UpdateComponent extends Update<Category> {\r\n  constructor(\r\n    public service: CategoriesService,\r\n    public notifications: NotificationsService,\r\n    public router: Router,\r\n    public route: ActivatedRoute\r\n  ) {\r\n    super(service, notifications, router, route);\r\n  }\r\n}\r\n","export class Category {\n  constructor(\n    public _id?: string,\n    public name?: string,\n    public description?: string,\n  ) { }\n}\n"],"sourceRoot":""}