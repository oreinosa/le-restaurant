{"version":3,"sources":["webpack:///./src/app/admin/products/create/create.component.html","webpack:///./src/app/admin/products/create/create.component.scss","webpack:///./src/app/admin/products/create/create.component.ts","webpack:///./src/app/admin/products/delete/delete.component.html","webpack:///./src/app/admin/products/delete/delete.component.scss","webpack:///./src/app/admin/products/delete/delete.component.ts","webpack:///./src/app/admin/products/list/list.component.html","webpack:///./src/app/admin/products/list/list.component.scss","webpack:///./src/app/admin/products/list/list.component.ts","webpack:///./src/app/admin/products/products-routing.module.ts","webpack:///./src/app/admin/products/products.component.html","webpack:///./src/app/admin/products/products.component.scss","webpack:///./src/app/admin/products/products.component.ts","webpack:///./src/app/admin/products/products.module.ts","webpack:///./src/app/admin/products/update/update.component.html","webpack:///./src/app/admin/products/update/update.component.scss","webpack:///./src/app/admin/products/update/update.component.ts","webpack:///./src/app/shared/classes/product.ts","webpack:///./src/app/upload/upload.component.html","webpack:///./src/app/upload/upload.component.scss","webpack:///./src/app/upload/upload.component.ts","webpack:///./src/app/upload/upload.module.ts","webpack:///./src/app/upload/upload.service.ts"],"names":[],"mappings":";;;;;;;;;AAAA,iwCAAiwC,iBAAiB,8jB;;;;;;;;;;;ACAlxC,mB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAqE;AAChC;AACoB;AACI;AACa;AAClB;AAC8B;AAC5B;AAEF;AASxD;IAAqC,mCAAe;IAIlD,yBACS,eAAgC,EAChC,MAAc,EACd,KAAqB,EACrB,aAAmC,EAClC,iBAAoC;QAL9C,YAOE,kBAAM,eAAe,EAAE,aAAa,EAAE,MAAM,EAAE,KAAK,CAAC,SACrD;QAPQ,qBAAe,GAAf,eAAe,CAAiB;QAChC,YAAM,GAAN,MAAM,CAAQ;QACd,WAAK,GAAL,KAAK,CAAgB;QACrB,mBAAa,GAAb,aAAa,CAAsB;QAClC,uBAAiB,GAAjB,iBAAiB,CAAmB;QAP9C,aAAO,GAAG,IAAI,+DAAO,EAAE,CAAC;;IAUxB,CAAC;IAED,kCAAQ,GAAR;QAAA,iBAYC;QAXC,IAAI,CAAC,iBAAiB;aACnB,GAAG,EAAE;aACL,IAAI;QACH,kDAAkD;QAClD,0DAAG,CAAC,oBAAU;YACZ,iBAAU,CAAC,GAAG,CAAC,kBAAQ;gBACrB,MAAM,CAAC,EAAE,IAAI,EAAE,QAAQ,CAAC,IAAI,EAAE,GAAG,EAAE,QAAQ,CAAC,GAAG,EAAc,CAAC;YAChE,CAAC,CAAC;QAFF,CAEE,CACH,CACF;aACA,SAAS,CAAC,UAAC,UAAsB,IAAK,QAAC,KAAI,CAAC,UAAU,GAAG,UAAU,CAAC,EAA9B,CAA8B,CAAC,CAAC;IAC3E,CAAC;IAED,kCAAQ,GAAR,UAAS,IAAY;QAArB,iBAgBC;QAfC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACxB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,UAAU,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,SAAS,CAC3D,UAAC,QAAgB;YACf,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YACtB,oCAAoC;YACpC,IAAM,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC;YACzC,SAAS,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,kEAAkE;YAChG,0DAA0D;YAC1D,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACxB,iBAAM,QAAQ,aAAC,IAAI,CAAC,CAAC;QACvB,CAAC,EACD,UAAC,KAAwB;YACvB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CACF,CAAC;IACJ,CAAC;IA3C2B;QAA3B,+DAAS,CAAC,wEAAe,CAAC;kCAAS,wEAAe;mDAAC;IADzC,eAAe;QAL3B,+DAAS,CAAC;YACT,QAAQ,EAAE,YAAY;;;SAGvB,CAAC;yCAM0B,iEAAe;YACxB,sDAAM;YACP,8DAAc;YACN,yFAAoB;YACf,gFAAiB;OATnC,eAAe,CA6C3B;IAAD,sBAAC;CAAA,CA7CoC,6DAAM,GA6C1C;AA7C2B;;;;;;;;;;;;AClB5B,4FAA4F,mBAAmB,0GAA0G,kCAAkC,mBAAmB,GAAG,eAAe,qW;;;;;;;;;;;ACAhS,mB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAiE;AACT;AACC;AACf;AAC0C;AAC5B;AAQxD;IAAqC,mCAAe;IAClD,yBACS,OAAwB,EACxB,aAAmC,EACnC,MAAc,EACd,KAAqB,EACpB,aAA4B;QALtC,YAOE,kBAAM,OAAO,EAAE,aAAa,EAAE,MAAM,EAAE,KAAK,CAAC,SAC7C;QAPQ,aAAO,GAAP,OAAO,CAAiB;QACxB,mBAAa,GAAb,aAAa,CAAsB;QACnC,YAAM,GAAN,MAAM,CAAQ;QACd,WAAK,GAAL,KAAK,CAAgB;QACpB,mBAAa,GAAb,aAAa,CAAe;;IAGtC,CAAC;IAED,kCAAQ,GAAR;QAAA,iBASC;QARC,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,SAAS,CAC3D,UAAC,GAAW;YACV,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACjB,iBAAM,QAAQ,YAAE,CAAC;QACnB,CAAC,EACD,UAAC,KAAU,IAAK,cAAO,CAAC,GAAG,CAAC,KAAK,CAAC,EAAlB,CAAkB,CACnC;IAEH,CAAC;IApBU,eAAe;QAL3B,+DAAS,CAAC;YACT,QAAQ,EAAE,YAAY;;;SAGvB,CAAC;yCAGkB,iEAAe;YACT,yFAAoB;YAC3B,sDAAM;YACP,8DAAc;YACL,oEAAa;OAN3B,eAAe,CAqB3B;IAAD,sBAAC;CAAA,CArBoC,6DAAM,GAqB1C;AArB2B;;;;;;;;;;;;ACb5B,yYAAyY,aAAa,8NAA8N,cAAc,6NAA6N,2BAA2B,0NAA0N,0BAA0B,sOAAsO,yBAAyB,6RAA6R,eAAe,gnBAAgnB,2BAA2B,kQ;;;;;;;;;;;ACApyE,8BAA8B,kBAAkB,EAAE,sBAAsB,eAAe,EAAE,uBAAuB,eAAe,EAAE,sBAAsB,eAAe,EAAE,0BAA0B,eAAe,EAAE,0BAA0B,eAAe,uBAAuB,EAAE,yBAAyB,eAAe,EAAE,gBAAgB,qBAAqB,EAAE,G;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA5T;AACY;AAEb;AACW;AAOpD;IAAmC,iCAAa;IAC9C,uBACS,OAAwB,EACxB,MAAc;QAFvB,YAIE,kBACE,OAAO,EACP,MAAM,EACN,CAAC,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,UAAU,EAAE,UAAU,EAAE,SAAS,CAAC,CAC7D,SACF;QARQ,aAAO,GAAP,OAAO,CAAiB;QACxB,YAAM,GAAN,MAAM,CAAQ;;IAOvB,CAAC;IAVU,aAAa;QALzB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;yCAGkB,iEAAe;YAChB,sDAAM;OAHZ,aAAa,CAWzB;IAAD,oBAAC;CAAA,CAXkC,yDAAI,GAWtC;AAXyB;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXe;AACc;AACK;AACA;AACA;AACH;AAEzD,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,qEAAiB,EAAE,QAAQ,EAAE;YAChD,EAAE,IAAI,EAAE,KAAK,EAAE,SAAS,EAAE,wEAAe,EAAE;YAC3C,EAAE,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,wEAAe,EAAE;YAC9C,EAAE,IAAI,EAAE,aAAa,EAAE,SAAS,EAAE,wEAAe,EAAE;YACnD,EAAE,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,wEAAe,EAAE;YAC9C,EAAE,IAAI,EAAE,aAAa,EAAE,SAAS,EAAE,wEAAe,EAAE;SACpD;KACF;CACF,CAAC;AAMF;IAAA;IAAqC,CAAC;IAAzB,qBAAqB;QAJjC,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;SACxB,CAAC;OACW,qBAAqB,CAAI;IAAD,4BAAC;CAAA;AAAJ;;;;;;;;;;;;ACvBlC,oQ;;;;;;;;;;;ACAA,mB;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEE;IAAgB,CAAC;IAEjB,oCAAQ,GAAR;IACA,CAAC;IALU,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;;;SAGzB,CAAC;;OACW,iBAAiB,CAO7B;IAAD,wBAAC;CAAA;AAP6B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACP8B;AACP;AACZ;AACmB;AAEM;AACT;AACG;AACA;AACA;AACN;AAiBtD;IAAA;IAA8B,CAAC;IAAlB,cAAc;QAf1B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,kEAAY;gBACZ,kEAAY;gBACZ,8EAAqB;aACtB;YACD,YAAY,EAAE;gBACZ,qEAAiB;gBACjB,wEAAe;gBACf,wEAAe;gBACf,wEAAe;gBACf,kEAAa;aACd;YACD,SAAS,EAAE,CAAC,iEAAe,CAAC;SAC7B,CAAC;OACW,cAAc,CAAI;IAAD,qBAAC;CAAA;AAAJ;;;;;;;;;;;;AC3B3B,q4CAAq4C,iBAAiB,ynB;;;;;;;;;;;ACAt5C,mB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA0E;AACrB;AAEI;AACH;AACjB;AACiD;AAC9B;AAGW;AAQnE;IAAqC,mCAAe;IAGlD,yBACS,OAAwB,EACxB,aAAmC,EACnC,MAAc,EACd,KAAqB,EACpB,iBAAoC;QAL9C,YAOE,kBAAM,OAAO,EAAE,aAAa,EAAE,MAAM,EAAE,KAAK,CAAC,SAC7C;QAPQ,aAAO,GAAP,OAAO,CAAiB;QACxB,mBAAa,GAAb,aAAa,CAAsB;QACnC,YAAM,GAAN,MAAM,CAAQ;QACd,WAAK,GAAL,KAAK,CAAgB;QACpB,uBAAiB,GAAjB,iBAAiB,CAAmB;;IAG9C,CAAC;IAED,kCAAQ,GAAR;QAAA,iBAOC;QANC,iBAAM,QAAQ,WAAE,CAAC;QACjB,IAAI,CAAC,iBAAiB;aACnB,GAAG,EAAE,CAAC,IAAI,CACT,0DAAG,CAAC,oBAAU,IAAI,iBAAU,CAAC,GAAG,CAAC,kBAAQ,IAAM,MAAM,CAAC,EAAE,IAAI,EAAE,QAAQ,CAAC,IAAI,EAAE,GAAG,EAAE,QAAQ,CAAC,GAAG,EAAc,EAAC,CAAC,CAAC,EAA7F,CAA6F,CAAC,CACjH;aACA,SAAS,CAAC,UAAC,UAAsB,IAAK,YAAI,CAAC,UAAU,GAAG,UAAU,EAA5B,CAA4B,CAAC,CAAC;IACzE,CAAC;IAED,2CAAiB,GAAjB,UAAkB,CAAW,EAAE,CAAW;QACxC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACX,MAAM,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,GAAG,CAAC;QACzB,CAAC;QACD,MAAM,CAAC,KAAK,CAAC;IACf,CAAC;IAED,kCAAQ,GAAR,UAAS,IAAY;QAArB,iBAeC;QAdC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,UAAU,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,SAAS,CAC1D,UAAC,QAAgB;YACf,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YACtB,oCAAoC;YACpC,IAAM,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC;YACzC,SAAS,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,kEAAkE;YAChG,0DAA0D;YAC1D,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACxB,iBAAM,QAAQ,aAAC,IAAI,CAAC,CAAC;QACvB,CAAC,EACD,UAAC,KAAwB;YACvB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CACF,CAAC;IACJ,CAAC;IA3C2B;QAA3B,+DAAS,CAAC,wEAAe,CAAC;kCAAS,wEAAe;mDAAC;IADzC,eAAe;QAL3B,+DAAS,CAAC;YACT,QAAQ,EAAE,YAAY;;;SAGvB,CAAC;yCAKkB,iEAAe;YACT,yFAAoB;YAC3B,sDAAM;YACP,8DAAc;YACD,gFAAiB;OARnC,eAAe,CA6C3B;IAAD,sBAAC;CAAA,CA7CoC,6DAAM,GA6C1C;AA7C2B;;;;;;;;;;;;;;ACjB5B;AAAA;IACE,iBACS,GAAY,EACZ,IAAa,EACb,IAAa,EACb,KAAc,EACd,QAAiB,EACjB,QAAmB;QALnB,QAAG,GAAH,GAAG,CAAS;QACZ,SAAI,GAAJ,IAAI,CAAS;QACb,SAAI,GAAJ,IAAI,CAAS;QACb,UAAK,GAAL,KAAK,CAAS;QACd,aAAQ,GAAR,QAAQ,CAAS;QACjB,aAAQ,GAAR,QAAQ,CAAW;IACxB,CAAC;IACP,cAAC;AAAD,CAAC;;;;;;;;;;;;;ACVD,0LAA0L,+QAA+Q,qYAAqY,QAAQ,yD;;;;;;;;;;;ACAt1B,8BAA8B,sBAAsB,uBAAuB,EAAE,gBAAgB,iBAAiB,2BAA2B,8BAA8B,uBAAuB,kBAAkB,oBAAoB,sBAAsB,EAAE,G;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA7L;AACK;AACnB;AAEX;AAOtC;IASE,yBAAoB,aAA4B;QAA5B,kBAAa,GAAb,aAAa,CAAe;QANvC,UAAK,GAAG,iBAAiB,CAAC;QAInC,SAAI,GAAW,KAAK,CAAC;IAE+B,CAAC;IAErD,kCAAQ,GAAR;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;YACjB,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC;YACnB,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,OAAO,CAAC;YACpC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,qEAAW,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC;QAC9E,CAAC;QACD,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC;YACxC,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC;QACtB,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YACpC,IAAI,CAAC,IAAI,GAAG,UAAU,CAAC;QACzB,CAAC;IACH,CAAC;IAED,iCAAO,GAAP;QACE,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;IACvC,CAAC;IAED,qCAAW,GAAX,UAAY,KAAU;QACpB,EAAE,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,IAAI,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAChD,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YAClC,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,KAAK,OAAO,CAAC,CAAC,CAAC;gBAC1B,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAC/B,CAAC;QACH,CAAC;IACH,CAAC;IAED,sCAAY,GAAZ,UAAa,KAAW;QAAxB,iBAMC;QALC,IAAM,MAAM,GAAG,IAAI,UAAU,EAAE,CAAC;QAChC,MAAM,CAAC,MAAM,GAAG,UAAC,KAAU;YACzB,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC;QACrC,CAAC,CAAC;QACF,MAAM,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;IAC9B,CAAC;IAED,gCAAM,GAAN,UAAO,EAAE;QACP,EAAE,CAAC,cAAc,EAAE,CAAC;QACpB,EAAE,CAAC,CAAC,EAAE,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;YAC1B,2DAA2D;YAC3D,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,YAAY,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;gBACtD,6CAA6C;gBAC7C,EAAE,CAAC,CAAC,EAAE,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,MAAM,CAAC,CAAC,CAAC;oBAC7C,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC;oBACjD,0DAA0D;gBAC5D,CAAC;YACH,CAAC;QACH,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,mDAAmD;YACnD,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,YAAY,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;gBACtD,8EAA8E;gBAC9E,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YACvC,CAAC;QACH,CAAC;QACD,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC7B,2CAA2C;QAC3C,IAAI,CAAC,cAAc,CAAC,EAAE,CAAC;IACzB,CAAC;IAEO,wCAAc,GAAtB,UAAuB,EAAE;QACvB,EAAE,CAAC,CAAC,EAAE,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;YAC1B,6DAA6D;YAC7D,EAAE,CAAC,YAAY,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;QAChC,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,qDAAqD;YACrD,EAAE,CAAC,YAAY,CAAC,SAAS,EAAE,CAAC;QAC9B,CAAC;IACH,CAAC;IAED,oCAAU,GAAV,UAAW,KAAK;QACd,uCAAuC;QACvC,4DAA4D;QAC5D,KAAK,CAAC,cAAc,EAAE,CAAC;IACzB,CAAC;IAED,kCAAQ,GAAR,UAAS,SAAiB,EAAE,QAAgB;QAC1C,0BAA0B;QAC1B,IAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;QAC5B,IAAM,aAAa,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QAC5C,QAAQ,IAAI,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC;QAChD,QAAQ,GAAG,QAAQ,CAAC,WAAW,EAAE,CAAC;QAClC,OAAO,CAAC,GAAG,CAAC,aAAa,EAAE,IAAI,CAAC,IAAI,CAAC;QACrC,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,KAAK,KAAK,CAAC,CAAC,CAAC;YACxB,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,SAAS,EAAE,QAAQ,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;QACvE,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,KAAK,MAAM,CAAC,CAAC,CAAC;YAChC,EAAE,CAAC,CAAC,IAAI,CAAC,eAAe,KAAK,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;gBAC1C,OAAO,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC;gBACnC,MAAM,CAAC,+CAAE,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAC1B,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,SAAS,EAAE,QAAQ,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC;YAC3F,CAAC;QACH,CAAC;IACH,CAAC;IApGQ;QAAR,2DAAK,EAAE;;oDAAiB;IAEhB;QAAR,2DAAK,EAAE;;kDAA2B;IAChB;QAAlB,+DAAS,CAAC,MAAM,CAAC;;sDAAW;IAJlB,eAAe;QAL3B,+DAAS,CAAC;YACT,QAAQ,EAAE,YAAY;;;SAGvB,CAAC;yCAUmC,6DAAa;OATrC,eAAe,CAsG3B;IAAD,sBAAC;CAAA;AAtG2B;;;;;;;;;;;;;;;;;;;;;;;;;ACXqB;AACR;AACY;AACE;AAUvD;IAAA;IAA4B,CAAC;IAAhB,YAAY;QARxB,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,kEAAY;aACb;YACD,YAAY,EAAE,CAAC,iEAAe,CAAC;YAC/B,OAAO,EAAE,CAAC,iEAAe,CAAC;YAC1B,SAAS,EAAE,CAAC,6DAAa,CAAC;SAC3B,CAAC;OACW,YAAY,CAAI;IAAD,mBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPK;AACa;AAEkB;AACxB;AAKrC;IAGE,uBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAF5B,QAAG,GAAG,qEAAW,CAAC,GAAG,GAAG,SAAS,CAAC;IAEF,CAAC;IAEzC,kCAAU,GAAV,UAAW,KAAa,EAAE,QAAgB,EAAE,IAAU;QACpD,IAAM,QAAQ,GAAa,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,QAAQ,EAAE,IAAI,CAAC,CAAC;QACrE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAM,IAAI,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC,IAAI,CACjD,0DAAG,CAAC,aAAG;YACL,MAAM,CAAC,GAAG,CAAC,IAAc,CAAC;QAC5B,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IAED,gCAAQ,GAAR,UAAS,KAAa,EAAE,QAAgB,EAAE,IAAU,EAAE,WAAmB;QACvE,IAAM,QAAQ,GAAa,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,QAAQ,EAAE,IAAI,CAAC,CAAC;QACrE,QAAQ,CAAC,MAAM,CAAC,aAAa,EAAE,WAAW,CAAC,CAAC;QAC5C,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,IAAI,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC,IAAI,CAChD,0DAAG,CAAC,aAAG;YACL,MAAM,CAAC,GAAG,CAAC,IAAc,CAAC;QAC5B,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IAED,kCAAU,GAAV,UAAW,WAAmB;QAC5B,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAM,IAAI,CAAC,GAAG,GAAG,WAAW,CAAC,CAAC,IAAI,CACvD,0DAAG,CAAC,aAAG;YACL,MAAM,CAAC,GAAG,CAAC,IAAc,CAAC;QAC5B,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IAED,qCAAa,GAAb,UAAc,KAAa,EAAE,QAAgB,EAAE,IAAU;QACvD,IAAM,QAAQ,GAAa,IAAI,QAAQ,EAAE,CAAC;QAC1C,QAAQ,GAAG,QAAQ,CAAC,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;QACzC,QAAQ,CAAC,MAAM,CAAC,OAAO,EAAE,IAAI,EAAE,QAAQ,CAAC,CAAC;QACzC,QAAQ,CAAC,MAAM,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;QAChC,MAAM,CAAC,QAAQ,CAAC;IAClB,CAAC;IAtCU,aAAa;QAHzB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAI0B,+DAAU;OAHzB,aAAa,CA0EzB;IAAD,oBAAC;CAAA;AA1EyB","file":"products-products-module.js","sourcesContent":["module.exports = \"<form #f='ngForm' (ngSubmit)='onSubmit(f)'>\\r\\n  <mat-card>\\r\\n    <mat-card-header>\\r\\n      <mat-card-title>\\r\\n        <h2>Add product</h2>\\r\\n      </mat-card-title>\\r\\n    </mat-card-header>\\r\\n    <mat-card-content>\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-12 col-sm-6 col-lg-4 offset-lg-1\\\">\\r\\n          <input type=\\\"text\\\" placeholder='Image URL' [(ngModel)]='product.imageURL' name='imageURL' class='d-none'>\\r\\n          <mat-form-field>\\r\\n            <input matInput type=\\\"text\\\" placeholder='Name' [(ngModel)]='product.name' name='name' required [readonly]='f.submitted'>\\r\\n          </mat-form-field>\\r\\n          <mat-form-field>\\r\\n            <input matInput type=\\\"number\\\" placeholder='Price' [(ngModel)]='product.price' name='price' required [readonly]='f.submitted'>\\r\\n          </mat-form-field>\\r\\n          <mat-form-field>\\r\\n            <input matInput type=\\\"number\\\" placeholder='Cost' [(ngModel)]='product.cost' name='cost' required [readonly]='f.submitted'>\\r\\n          </mat-form-field>\\r\\n          <mat-form-field>\\r\\n            <mat-select placeholder='Category' [(ngModel)]='product.category' name='category' required>\\r\\n              <mat-option *ngFor='let category of categories' [value]='category'>{{ category.name }}</mat-option>\\r\\n            </mat-select>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n        <div class=\\\"col-12 col-sm-6 col-lg-6 offset-lg-1 text-center my-2\\\">\\r\\n          <app-upload></app-upload>\\r\\n        </div>\\r\\n      </div>\\r\\n    </mat-card-content>\\r\\n    <mat-card-actions>\\r\\n      <button mat-button type='submit' [disabled]='f.invalid || f.submitted || !upload?.fileURL'>Submit</button>\\r\\n      <button mat-button type='button' routerLink='../' [disabled]='f.submitted'>Cancel</button>\\r\\n    </mat-card-actions>\\r\\n  </mat-card>\\r\\n</form>\\r\\n\"","module.exports = \"\"","import { UploadComponent } from \"./../../../upload/upload.component\";\r\nimport { map } from \"rxjs/operators\";\r\nimport { Router, ActivatedRoute } from \"@angular/router\";\r\nimport { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { CategoriesService } from \"./../../categories/categories.service\";\r\nimport { ProductsService } from \"./../products.service\";\r\nimport { NotificationsService } from \"./../../../notifications/notifications.service\";\r\nimport { Product } from \"../../../shared/classes/product\";\r\nimport { Category } from \"./../../../shared/classes/category\";\r\nimport { Create } from \"../../../shared/classes/create\";\r\nimport { NgForm } from \"@angular/forms\";\r\nimport { HttpErrorResponse } from \"@angular/common/http\";\r\n\r\n@Component({\r\n  selector: \"app-create\",\r\n  templateUrl: \"./create.component.html\",\r\n  styleUrls: [\"./create.component.scss\", \"../../styles/crud.scss\"]\r\n})\r\nexport class CreateComponent extends Create<Product> implements OnInit {\r\n  @ViewChild(UploadComponent) upload: UploadComponent;\r\n  product = new Product();\r\n  categories: Category[];\r\n  constructor(\r\n    public productsService: ProductsService,\r\n    public router: Router,\r\n    public route: ActivatedRoute,\r\n    public notifications: NotificationsService,\r\n    private categoriesService: CategoriesService\r\n  ) {\r\n    super(productsService, notifications, router, route);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.categoriesService\r\n      .all()\r\n      .pipe(\r\n        // tslint:disable-next-line:arrow-return-shorthand\r\n        map(categories =>\r\n          categories.map(category => {\r\n            return { name: category.name, _id: category._id } as Category;\r\n          })\r\n        )\r\n      )\r\n      .subscribe((categories: Category[]) => (this.categories = categories));\r\n  }\r\n\r\n  onSubmit(form: NgForm) {\r\n    console.log(form.value);\r\n    this.upload.onSubmit(\"products\", this.product.name).subscribe(\r\n      (imageURL: string) => {\r\n        console.log(imageURL);\r\n        // this.product.imageURL = imageURL;\r\n        const imageCtrl = form.controls.imageURL;\r\n        imageCtrl.setValue(imageURL); // set imageURL input value to the resolt of the upload POST event\r\n        // form.setValue({ ...form.value, \"imageURL\": res.data });\r\n        console.log(form.value);\r\n        super.onSubmit(form);\r\n      },\r\n      (error: HttpErrorResponse) => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n}\r\n","module.exports = \"<mat-card>\\n  <mat-card-header>\\n    <mat-card-title>\\n      <h2>Delete {{service.className}}</h2>\\n    </mat-card-title>\\n  </mat-card-header>\\n  <mat-card-content>\\n    <ng-container *ngIf='object;else loading'>\\n      <p>Delete {{service.className}} {{ object?._id }}</p>\\n    </ng-container>\\n    <ng-template #loading>\\n      <mat-spinner class=\\\"col-12 mx-auto\\\"></mat-spinner>\\n    </ng-template>\\n  </mat-card-content>\\n  <mat-card-actions>\\n    <button mat-button type='button' (click)='onSubmit()'>Yes</button>\\n    <button mat-button type='button' routerLink='../../'>No</button>\\n  </mat-card-actions>\\n</mat-card>\"","module.exports = \"\"","import { UploadService } from './../../../upload/upload.service';\r\nimport { ProductsService } from \"./../products.service\";\r\nimport { Router, ActivatedRoute } from \"@angular/router\";\r\nimport { Component } from \"@angular/core\";\r\nimport { NotificationsService } from \"../../../notifications/notifications.service\";\r\nimport { Delete } from \"../../../shared/classes/delete\";\r\nimport { Product } from \"../../../shared/classes/product\";\r\n\r\n@Component({\r\n  selector: \"app-delete\",\r\n  templateUrl: \"./delete.component.html\",\r\n  styleUrls: [\"./delete.component.scss\", \"../../styles/crud.scss\"]\r\n})\r\nexport class DeleteComponent extends Delete<Product> {\r\n  constructor(\r\n    public service: ProductsService,\r\n    public notifications: NotificationsService,\r\n    public router: Router,\r\n    public route: ActivatedRoute,\r\n    private uploadService: UploadService\r\n  ) {\r\n    super(service, notifications, router, route);\r\n  }\r\n\r\n  onSubmit() {\r\n    this.uploadService.deleteFile(this.object.imageURL).subscribe(\r\n      (res: string) => {\r\n        console.log(res);\r\n        super.onSubmit();\r\n      },\r\n      (error: any) => console.log(error)\r\n    )\r\n\r\n  }\r\n}\r\n","module.exports = \"<button mat-button type='button' routerLink='add'>Add product</button>\\r\\n<div class=\\\"table-container\\\">\\r\\n\\r\\n  <table mat-table [dataSource]=\\\"dataSource\\\" class=\\\"mat-elevation-z0\\\">\\r\\n\\r\\n    <!-- ID Column -->\\r\\n    <!-- <ng-container matColumnDef=\\\"id\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> ID </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element._id}} </td>\\r\\n    </ng-container> -->\\r\\n\\r\\n    <!-- Name Column -->\\r\\n    <ng-container matColumnDef=\\\"name\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Name </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.name}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Price Column -->\\r\\n    <ng-container matColumnDef=\\\"price\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Price </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.price | currency }} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Cost Column -->\\r\\n    <ng-container matColumnDef=\\\"cost\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Cost </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.cost | currency }} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Category Column -->\\r\\n    <ng-container matColumnDef=\\\"category\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Category </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element?.category?.name}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Image Column -->\\r\\n    <ng-container matColumnDef=\\\"imageURL\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Image </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n        <img [src]=\\\"element?.imageURL | viewImage\\\" alt='{{element?.name}} image not available' class='img-fluid'>\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Actions Column -->\\r\\n    <ng-container matColumnDef=\\\"actions\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Actions </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n        <button mat-button type='button' (click)='onAction(\\\"update\\\",element)'>Update</button>\\r\\n        <button mat-button type='button' (click)='onAction(\\\"delete\\\",element)'>Delete</button>\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n  </table>\\r\\n  <ng-container *ngIf='loading'>\\r\\n    <mat-spinner class=\\\"mx-auto my-3\\\"></mat-spinner>\\r\\n  </ng-container>\\r\\n</div>\\r\\n<mat-paginator [length]='dataSource?.data?.length' [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\"></mat-paginator>\"","module.exports = \".img-fluid {\\n  height: 250px; }\\n\\n.mat-column-name {\\n  width: 20%; }\\n\\n.mat-column-price {\\n  width: 15%; }\\n\\n.mat-column-cost {\\n  width: 15%; }\\n\\n.mat-column-category {\\n  width: 15%; }\\n\\n.mat-column-imageURL {\\n  width: 20%;\\n  text-align: center; }\\n\\n.mat-column-actions {\\n  width: 15%; }\\n\\n.mat-table {\\n  min-width: 700px; }\\n\"","import { Component } from \"@angular/core\";\r\nimport { ProductsService } from \"../products.service\";\r\nimport { Product } from \"../../../shared/classes/product\";\r\nimport { Router } from \"@angular/router\";\r\nimport { List } from \"../../../shared/classes/list\";\r\n\r\n@Component({\r\n  selector: \"app-list\",\r\n  templateUrl: \"./list.component.html\",\r\n  styleUrls: [\"./list.component.scss\", \"../../styles/crud.scss\", \"../../styles/list.scss\"]\r\n})\r\nexport class ListComponent extends List<Product> {\r\n  constructor(\r\n    public service: ProductsService,\r\n    public router: Router,\r\n  ) {\r\n    super(\r\n      service,\r\n      router,\r\n      [\"name\", \"price\", \"cost\", \"category\", \"imageURL\", \"actions\"]\r\n    );\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { DeleteComponent } from './delete/delete.component';\r\nimport { UpdateComponent } from './update/update.component';\r\nimport { CreateComponent } from './create/create.component';\r\nimport { ProductsComponent } from './products.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '', component: ProductsComponent, children: [\r\n      { path: 'add', component: CreateComponent },\r\n      { path: 'update', component: UpdateComponent },\r\n      { path: 'update/:_id', component: UpdateComponent },\r\n      { path: 'delete', component: DeleteComponent },\r\n      { path: 'delete/:_id', component: DeleteComponent },\r\n    ]\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ProductsRoutingModule { }\r\n","module.exports = \"<router-outlet></router-outlet>\\n<mat-card>\\n  <mat-card-header>\\n    <mat-card-title>\\n      <h2>Products</h2>\\n    </mat-card-title>\\n  </mat-card-header>\\n  <mat-card-content>\\n    <app-list></app-list>\\n  </mat-card-content>\\n</mat-card>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-products',\n  templateUrl: './products.component.html',\n  styleUrls: ['./products.component.scss']\n})\nexport class ProductsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { UploadModule } from './../../upload/upload.module';\r\nimport { ProductsService } from './products.service';\r\nimport { NgModule } from '@angular/core';\r\nimport { SharedModule } from './../../shared/shared.module';\r\n\r\nimport { ProductsRoutingModule } from './products-routing.module';\r\nimport { ProductsComponent } from './products.component';\r\nimport { CreateComponent } from './create/create.component';\r\nimport { UpdateComponent } from './update/update.component';\r\nimport { DeleteComponent } from './delete/delete.component';\r\nimport { ListComponent } from './list/list.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    SharedModule,\r\n    UploadModule,\r\n    ProductsRoutingModule\r\n  ],\r\n  declarations: [\r\n    ProductsComponent,\r\n    CreateComponent,\r\n    UpdateComponent,\r\n    DeleteComponent,\r\n    ListComponent\r\n  ],\r\n  providers: [ProductsService]\r\n})\r\nexport class ProductsModule { }\r\n","module.exports = \"<form #f='ngForm' (ngSubmit)='onSubmit(f)'>\\r\\n  <mat-card>\\r\\n    <mat-card-header>\\r\\n      <mat-card-title>\\r\\n        <h2>Edit product</h2>\\r\\n      </mat-card-title>\\r\\n    </mat-card-header>\\r\\n    <mat-card-content>\\r\\n      <ng-container *ngIf='object as product'>\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-12 col-sm-6 col-lg-4 offset-lg-1\\\">\\r\\n            <input type=\\\"text\\\" placeholder='Image URL' [(ngModel)]='product.imageURL' name='imageURL' class='d-none'>\\r\\n            <mat-form-field>\\r\\n              <input matInput type=\\\"text\\\" placeholder='Name' [ngModel]='product.name' name='name' required [readonly]='f.submitted'>\\r\\n            </mat-form-field>\\r\\n            <mat-form-field>\\r\\n              <input matInput type=\\\"number\\\" placeholder='Price' [ngModel]='product.price' name='price' required [readonly]='f.submitted'>\\r\\n            </mat-form-field>\\r\\n            <mat-form-field>\\r\\n              <input matInput type=\\\"number\\\" placeholder='Cost' [ngModel]='product.cost' name='cost' required [readonly]='f.submitted'>\\r\\n            </mat-form-field>\\r\\n            <mat-form-field>\\r\\n              <mat-select placeholder='Category' [ngModel]='product.category' name='category' required [disabled]='f.submitted' [compareWith]='compareCategoryFn'>\\r\\n                <mat-option *ngFor='let category of categories' [value]='category'>{{ category.name }}</mat-option>\\r\\n              </mat-select>\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n          <div class=\\\"col-12 col-sm-6 col-lg-6 offset-lg-1 text-center my-2\\\">\\r\\n            <app-upload [fileURL]='product.imageURL | viewImage'></app-upload>\\r\\n          </div>\\r\\n        </div>\\r\\n      </ng-container>\\r\\n    </mat-card-content>\\r\\n    <mat-card-actions>\\r\\n      <button mat-button type='submit' [disabled]='f.invalid || f.submitted'>Submit</button>\\r\\n      <button mat-button type='button' routerLink='../../' [disabled]='f.submitted'>Cancel</button>\\r\\n    </mat-card-actions>\\r\\n  </mat-card>\\r\\n</form>\"","module.exports = \"\"","import { CategoriesService } from './../../categories/categories.service';\r\nimport { Component, ViewChild } from \"@angular/core\";\r\nimport { Product } from \"../../../shared/classes/product\";\r\nimport { Router, ActivatedRoute } from \"@angular/router\";\r\nimport { ProductsService } from \"../products.service\";\r\nimport { map } from \"rxjs/operators\";\r\nimport { NotificationsService } from \"./../../../notifications/notifications.service\";\r\nimport { Update } from \"../../../shared/classes/update\";\r\nimport { Category } from \"../../../shared/classes/category\";\r\nimport { NgForm } from '@angular/forms';\r\nimport { UploadComponent } from '../../../upload/upload.component';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: \"app-update\",\r\n  templateUrl: \"./update.component.html\",\r\n  styleUrls: [\"./update.component.scss\", \"../../styles/crud.scss\"]\r\n})\r\nexport class UpdateComponent extends Update<Product> {\r\n  @ViewChild(UploadComponent) upload: UploadComponent;\r\n  categories: Category[];\r\n  constructor(\r\n    public service: ProductsService,\r\n    public notifications: NotificationsService,\r\n    public router: Router,\r\n    public route: ActivatedRoute,\r\n    private categoriesService: CategoriesService\r\n  ) {\r\n    super(service, notifications, router, route);\r\n  }\r\n\r\n  ngOnInit() {\r\n    super.ngOnInit();\r\n    this.categoriesService\r\n      .all().pipe(\r\n        map(categories => categories.map(category => { return { name: category.name, _id: category._id } as Category }))\r\n      )\r\n      .subscribe((categories: Category[]) => this.categories = categories);\r\n  }\r\n\r\n  compareCategoryFn(a: Category, b: Category): boolean {\r\n    if (a && b) {\r\n      return a._id === b._id;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  onSubmit(form: NgForm) {\r\n    this.upload.onSubmit(\"products\", this.object.name).subscribe(\r\n      (imageURL: string) => {\r\n        console.log(imageURL);\r\n        // this.product.imageURL = imageURL;\r\n        const imageCtrl = form.controls.imageURL;\r\n        imageCtrl.setValue(imageURL); // set imageURL input value to the resolt of the upload POST event\r\n        // form.setValue({ ...form.value, \"imageURL\": res.data });\r\n        console.log(form.value);\r\n        super.onSubmit(form);\r\n      },\r\n      (error: HttpErrorResponse) => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n}\r\n","import { Category } from './category';\nexport class Product {\n  constructor(\n    public _id?: string,\n    public name?: string,\n    public cost?: number,\n    public price?: number,\n    public imageURL?: string,\n    public category?: Category\n  ) { }\n}\n","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-12 mb-4\\\">\\n    <div class=\\\"drop_zone my-2 hover\\\" (click)='addFile()' (drop)='onDrop($event)' (dragover)=\\\"onDragover($event);\\\">\\n      Select/Drag a file here!\\n    </div>\\n    <input type=\\\"file\\\" #file style='display:none' name='foo' placeholder='File upload' (change)=\\\"previewFile($event)\\\" [accept]='types'\\n    />\\n  </div>\\n  <div class=\\\"col-12 mb-4\\\">\\n    <ng-container *ngIf='fileURL;else noFile'>\\n      <ng-container [ngSwitch]='type'>\\n        <ng-container *ngSwitchCase='\\\"image\\\"'>\\n          <img [src]=\\\"fileURL\\\" alt=\\\"image\\\" class='img-fluid'>\\n        </ng-container>\\n        <ng-container *ngSwitchCase='\\\"document\\\"'>\\n          document preview\\n        </ng-container>\\n      </ng-container>\\n    </ng-container>\\n    <ng-template #noFile>\\n      <p>(No {{ type }} uploaded yet)</p>\\n    </ng-template>\\n  </div>\\n</div>\"","module.exports = \".img-fluid {\\n  max-height: 350px;\\n  text-align: center; }\\n\\n.drop_zone {\\n  height: 75px;\\n  border: 1px solid #aaa;\\n  background-color: #fafafa;\\n  text-align: center;\\n  padding: 25px;\\n  font-size: 25px;\\n  line-height: 25px; }\\n\"","import { environment } from './../../environments/environment';\r\nimport { Component, OnInit, Input, ViewChild } from \"@angular/core\";\r\nimport { UploadService } from \"./upload.service\";\r\nimport { Upload } from \"./upload\";\r\nimport { of, Observable } from \"rxjs\";\r\n\r\n@Component({\r\n  selector: \"app-upload\",\r\n  templateUrl: \"./upload.component.html\",\r\n  styleUrls: [\"./upload.component.scss\"]\r\n})\r\nexport class UploadComponent implements OnInit {\r\n  @Input() fileURL: string;\r\n  originalFileURL: string;\r\n  @Input() types = \".png,.jpeg,.jpg\";\r\n  @ViewChild(\"file\") fileInput;\r\n  type: string;\r\n  file: File;\r\n  mode: string = 'new';\r\n\r\n  constructor(private uploadService: UploadService) { }\r\n\r\n  ngOnInit() {\r\n    if (this.fileURL) {\r\n      this.mode = 'edit';\r\n      this.originalFileURL = this.fileURL;\r\n      this.originalFileURL = this.originalFileURL.replace(environment.static, '');\r\n    }\r\n    if (this.types.search(/(jpg|png|jpeg)/)) {\r\n      this.type = \"image\";\r\n    } else if (this.types.search(/pdf/)) {\r\n      this.type = \"document\";\r\n    }\r\n  }\r\n\r\n  addFile() {\r\n    this.fileInput.nativeElement.click();\r\n  }\r\n\r\n  previewFile(event: any) {\r\n    if (event.target.files && event.target.files[0]) {\r\n      this.file = event.target.files[0];\r\n      if (this.type === \"image\") {\r\n        this.previewImage(this.file);\r\n      }\r\n    }\r\n  }\r\n\r\n  previewImage(image: File) {\r\n    const reader = new FileReader();\r\n    reader.onload = (event: any) => {\r\n      this.fileURL = event.target.result;\r\n    };\r\n    reader.readAsDataURL(image);\r\n  }\r\n\r\n  onDrop(ev) {\r\n    ev.preventDefault();\r\n    if (ev.dataTransfer.items) {\r\n      // Use DataTransferItemList interface to access the file(s)\r\n      for (let i = 0; i < ev.dataTransfer.items.length; i++) {\r\n        // If dropped items aren't files, reject them\r\n        if (ev.dataTransfer.items[i].kind === 'file') {\r\n          this.file = ev.dataTransfer.items[i].getAsFile();\r\n          // console.log('... file[' + i + '].name = ' + file.name);\r\n        }\r\n      }\r\n    } else {\r\n      // Use DataTransfer interface to access the file(s)\r\n      for (let i = 0; i < ev.dataTransfer.files.length; i++) {\r\n        // console.log('... file[' + i + '].name = ' + ev.dataTransfer.files[i].name);\r\n        this.file = ev.dataTransfer.files[i];\r\n      }\r\n    }\r\n    this.previewImage(this.file);\r\n    // Pass event to removeDragData for cleanup\r\n    this.removeDragData(ev)\r\n  }\r\n\r\n  private removeDragData(ev) {\r\n    if (ev.dataTransfer.items) {\r\n      // Use DataTransferItemList interface to remove the drag data\r\n      ev.dataTransfer.items.clear();\r\n    } else {\r\n      // Use DataTransfer interface to remove the drag data\r\n      ev.dataTransfer.clearData();\r\n    }\r\n  }\r\n\r\n  onDragover(event) {\r\n    // console.log('File(s) in drop zone');\r\n    // Prevent default behavior (Prevent file from being opened)\r\n    event.preventDefault();\r\n  }\r\n\r\n  onSubmit(fileRoute: string, fileName: string): Observable<string> {\r\n    // console.log(this.file);\r\n    const type = this.file.type;\r\n    const fileTypeIndex = type.indexOf(\"/\") + 1;\r\n    fileName += \".\" + type.substring(fileTypeIndex);\r\n    fileName = fileName.toLowerCase();\r\n    console.log('submitting ', this.mode)\r\n    if (this.mode === 'new') {\r\n      return this.uploadService.uploadFile(fileRoute, fileName, this.file);\r\n    } else if (this.mode === \"edit\") {\r\n      if (this.originalFileURL === this.fileURL) {\r\n        console.log('file did not change');\r\n        return of(this.fileURL);\r\n      } else {\r\n        return this.uploadService.editFile(fileRoute, fileName, this.file, this.originalFileURL);\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { UploadService } from './upload.service';\nimport { NgModule } from '@angular/core';\nimport { UploadComponent } from './upload.component';\nimport { SharedModule } from '../shared/shared.module';\n\n@NgModule({\n  imports: [\n    SharedModule,\n  ],\n  declarations: [UploadComponent],\n  exports: [UploadComponent],\n  providers: [UploadService]\n})\nexport class UploadModule { }\n","import {\r\n  HttpClient,\r\n  HttpHeaders,\r\n  HttpRequest,\r\n  HttpEventType,\r\n  HttpResponse\r\n} from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Observable, Subject } from \"rxjs\";\r\nimport { environment } from \"../../environments/environment\";\r\nimport { map } from \"rxjs/operators\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\"\r\n})\r\nexport class UploadService {\r\n  private api = environment.api + \"upload/\";\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  uploadFile(route: string, fileName: string, file: File): Observable<string> {\r\n    const formData: FormData = this.prepareUpload(route, fileName, file);\r\n    return this.http.post<any>(this.api, formData).pipe(\r\n      map(res => {\r\n        return res.data as string;\r\n      })\r\n    );\r\n  }\r\n\r\n  editFile(route: string, fileName: string, file: File, oldFilePath: string): Observable<string> {\r\n    const formData: FormData = this.prepareUpload(route, fileName, file);\r\n    formData.append('oldFilePath', oldFilePath);\r\n    return this.http.put<any>(this.api, formData).pipe(\r\n      map(res => {\r\n        return res.data as string;\r\n      })\r\n    );\r\n  }\r\n\r\n  deleteFile(oldFilePath: string) {\r\n    return this.http.delete<any>(this.api + oldFilePath).pipe(\r\n      map(res => {\r\n        return res.data as string;\r\n      })\r\n    );\r\n  }\r\n\r\n  prepareUpload(route: string, fileName: string, file: File): FormData {\r\n    const formData: FormData = new FormData();\r\n    fileName = fileName.replace(/\\s+/g, \"-\");\r\n    formData.append(\"image\", file, fileName);\r\n    formData.append(\"route\", route);\r\n    return formData;\r\n  }\r\n\r\n  // uploadFile(route: string, fileName: string, file: File): Observable<any> {\r\n  //   // const status = {};\r\n  //   const formData: FormData = new FormData();\r\n  //   formData.append(\"image\", file, fileName);\r\n  //   formData.append(\"route\", route);\r\n  //   // create a http-post request and pass the form\r\n  //   // tell it to report the upload progress\r\n  //   const req = new HttpRequest(\"POST\", this.api, formData, {\r\n  //     // reportProgress: true,\r\n  //   });\r\n\r\n  //   // create a new progress-subject for every file\r\n  //   // const progress = new Subject<number>();\r\n\r\n  //   // send the http-request and subscribe for progress-updates\r\n  //   // this.http.request(req).subscribe(event => {\r\n  //   //   if (event.type === HttpEventType.UploadProgress) {\r\n  //   //     // calculate the progress percentage\r\n  //   //     const percentDone = Math.round(100 * event.loaded / event.total);\r\n\r\n  //   //     // pass the percentage into the progress-stream\r\n  //   //     progress.next(percentDone);\r\n  //   //   } else if (event instanceof HttpResponse) {\r\n  //   //     // Close the progress-stream if we get an answer form the API\r\n  //   //     // The upload is complete\r\n  //   //     progress.complete();\r\n  //   //   }\r\n  //   // });\r\n  //   // status[file.name] = {\r\n  //   //   progress: progress.asObservable()\r\n  //   // };\r\n  //   // return status;\r\n  //   return this.http.request(req);\r\n  // }\r\n}\r\n"],"sourceRoot":""}