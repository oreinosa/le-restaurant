{"version":3,"sources":["webpack:///./src/app/admin/users/create/create.component.html","webpack:///./src/app/admin/users/create/create.component.scss","webpack:///./src/app/admin/users/create/create.component.ts","webpack:///./src/app/admin/users/delete/delete.component.html","webpack:///./src/app/admin/users/delete/delete.component.scss","webpack:///./src/app/admin/users/delete/delete.component.ts","webpack:///./src/app/admin/users/list/list.component.html","webpack:///./src/app/admin/users/list/list.component.scss","webpack:///./src/app/admin/users/list/list.component.ts","webpack:///./src/app/admin/users/update/update.component.html","webpack:///./src/app/admin/users/update/update.component.scss","webpack:///./src/app/admin/users/update/update.component.ts","webpack:///./src/app/admin/users/users-routing.module.ts","webpack:///./src/app/admin/users/users.component.html","webpack:///./src/app/admin/users/users.component.scss","webpack:///./src/app/admin/users/users.component.ts","webpack:///./src/app/admin/users/users.module.ts","webpack:///./src/app/admin/users/users.service.ts","webpack:///./src/app/shared/classes/user.ts"],"names":[],"mappings":"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","file":"users-users-module.js","sourcesContent":["module.exports = \"<form #f='ngForm' (ngSubmit)='onSubmit(f)'>\\r\\n  <mat-card>\\r\\n    <mat-card-header>\\r\\n      <mat-card-title>\\r\\n        <h2>Add user</h2>\\r\\n      </mat-card-title>\\r\\n    </mat-card-header>\\r\\n    <mat-card-content>\\r\\n      <mat-form-field>\\r\\n        <input matInput type=\\\"text\\\" placeholder='Name' [(ngModel)]='user.name' name='name' required [readonly]='f.submitted'>\\r\\n      </mat-form-field>\\r\\n      <mat-form-field>\\r\\n        <input matInput type=\\\"text\\\" placeholder='User name' [(ngModel)]='user.username' name='username' required [readonly]='f.submitted'>\\r\\n      </mat-form-field>\\r\\n      <mat-form-field>\\r\\n        <input matInput type=\\\"email\\\" placeholder='Email address' [(ngModel)]='user.email' name='email' required [readonly]='f.submitted'>\\r\\n      </mat-form-field>\\r\\n      <mat-form-field>\\r\\n        <mat-select placeholder='Role' [(ngModel)]='user.role' name='role' required [disabled]='f.submitted'>\\r\\n          <mat-option *ngFor='let role of roles' [value]='role'>{{ role }}</mat-option>\\r\\n        </mat-select>\\r\\n      </mat-form-field>\\r\\n      <mat-form-field>\\r\\n        <input matInput type=\\\"text\\\" placeholder='Password' [(ngModel)]='user.password' name='password' required [readonly]='f.submitted'>\\r\\n      </mat-form-field>\\r\\n    </mat-card-content>\\r\\n    <mat-card-actions>\\r\\n      <button mat-button type='submit' [disabled]='f.invalid || f.submitted'>Submit</button>\\r\\n      <button mat-button type='button' routerLink='../' [disabled]='f.submitted'>Cancel</button>\\r\\n    </mat-card-actions>\\r\\n  </mat-card>\\r\\n</form>\"","module.exports = \"\"","import { UsersService } from './../users.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { NotificationsService } from \"./../../../notifications/notifications.service\";\r\nimport { Component, OnInit } from \"@angular/core\";\r\nimport { User } from '../../../shared/classes/user';\r\nimport { Create } from '../../../shared/classes/create';\r\n\r\n@Component({\r\n  selector: \"app-create\",\r\n  templateUrl: \"./create.component.html\",\r\n  styleUrls: [\"./create.component.scss\", \"../../styles/crud.scss\"]\r\n})\r\nexport class CreateComponent extends Create<User> {\r\n  user = new User();\r\n  roles = [\r\n    \"Customer\",\r\n    \"Admin\"\r\n  ];\r\n  \r\n  constructor(\r\n    public usersService: UsersService,\r\n    public router: Router,\r\n    public route: ActivatedRoute,\r\n    public notifications: NotificationsService\r\n  ) {\r\n    super(usersService, notifications, router, route);\r\n  }\r\n}\r\n","module.exports = \"<mat-card>\\n  <mat-card-header>\\n    <mat-card-title>\\n      <h2>Delete {{service.className}}</h2>\\n    </mat-card-title>\\n  </mat-card-header>\\n  <mat-card-content>\\n    <ng-container *ngIf='object;else loading'>\\n      <p>Delete {{service.className}} {{ object?._id }}</p>\\n    </ng-container>\\n    <ng-template #loading>\\n      <mat-spinner class=\\\"col-12 mx-auto\\\"></mat-spinner>\\n    </ng-template>\\n  </mat-card-content>\\n  <mat-card-actions>\\n    <button mat-button type='button' (click)='onSubmit()'>Yes</button>\\n    <button mat-button type='button' routerLink='../../'>No</button>\\n  </mat-card-actions>\\n</mat-card>\"","module.exports = \"\"","import { UsersService } from './../users.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Component } from '@angular/core';\nimport { NotificationsService } from '../../../notifications/notifications.service';\nimport { Delete } from '../../../shared/classes/delete';\nimport { User } from '../../../shared/classes/user';\n\n@Component({\n  selector: 'app-delete',\n  templateUrl: './delete.component.html',\n  styleUrls: ['./delete.component.scss', \"../../styles/crud.scss\"]\n})\nexport class DeleteComponent extends Delete<User> {\n  constructor(\n    public usersService: UsersService,\n    public notifications: NotificationsService,\n    public router: Router,\n    public route: ActivatedRoute\n  ) {\n    super(usersService, notifications, router, route);\n  }\n\n}\n","module.exports = \"<button mat-button type='button' routerLink='add'>Add user</button>\\r\\n<div class=\\\"table-container\\\">\\r\\n\\r\\n  <table mat-table [dataSource]=\\\"dataSource\\\" class=\\\"mat-elevation-z0\\\">\\r\\n\\r\\n    <!-- ID Column -->\\r\\n    <!-- <ng-container matColumnDef=\\\"id\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> ID </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element._id}} </td>\\r\\n    </ng-container> -->\\r\\n\\r\\n    <!-- Created at Column -->\\r\\n    <ng-container matColumnDef=\\\"createdAt\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Created at </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.createdAt | date}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Name Column -->\\r\\n    <ng-container matColumnDef=\\\"name\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Name </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.name}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- User name Column -->\\r\\n    <ng-container matColumnDef=\\\"username\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> User name </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.username}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Email address Column -->\\r\\n    <ng-container matColumnDef=\\\"email\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Email address </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.email}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Role Column -->\\r\\n    <ng-container matColumnDef=\\\"role\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Role </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.role}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Actions Column -->\\r\\n    <ng-container matColumnDef=\\\"actions\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Actions </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n        <button mat-button type='button' (click)='onAction(\\\"update\\\",element)'>Update</button>\\r\\n        <button mat-button type='button' (click)='onAction(\\\"delete\\\",element)'>Delete</button>\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n  </table>\\r\\n  <ng-container *ngIf='loading'>\\r\\n    <mat-spinner class=\\\"mx-auto my-3\\\"></mat-spinner>\\r\\n  </ng-container>\\r\\n</div>\\r\\n<mat-paginator [length]='dataSource?.data?.length' [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\"></mat-paginator>\"","module.exports = \".mat-column-id {\\n  width: 5%; }\\n\\n.mat-column-name {\\n  width: 20%; }\\n\\n.mat-column-description {\\n  width: 40%; }\\n\\n.mat-column-actions {\\n  width: 20%; }\\n\\n.mat-table {\\n  min-width: 700px; }\\n\"","import { Component, OnInit, OnDestroy } from \"@angular/core\";\r\nimport { UsersService } from \"../users.service\";\r\nimport { User } from \"../../../shared/classes/user\";\r\nimport { Router } from \"@angular/router\";\r\nimport { List } from \"../../../shared/classes/list\";\r\n\r\n@Component({\r\n  selector: \"app-list\",\r\n  templateUrl: \"./list.component.html\",\r\n  styleUrls: [\"./list.component.scss\", \"../../styles/crud.scss\", \"../../styles/list.scss\"]\r\n})\r\nexport class ListComponent extends List<User> {\r\n  constructor(\r\n    public service: UsersService,\r\n    public router: Router,\r\n  ) {\r\n    super(\r\n      service,\r\n      router,\r\n      [\"createdAt\", \"name\", \"username\", \"email\", \"role\", \"actions\"]\r\n    );\r\n  }\r\n\r\n  onAction(action: string, user: User) {\r\n    let username = \"\";\r\n    if (user) {\r\n      username = user['username'];\r\n      this.service.setSelectedObject(user);\r\n    }\r\n    this.router.navigate([\"admin\", this.service.collectionName.toLowerCase(), action, username]);\r\n  }\r\n}\r\n","module.exports = \"<form #f='ngForm' (ngSubmit)='onSubmit(f)'>\\r\\n  <mat-card>\\r\\n    <mat-card-header>\\r\\n      <mat-card-title>\\r\\n        <h2>Edit user</h2>\\r\\n      </mat-card-title>\\r\\n    </mat-card-header>\\r\\n    <mat-card-content>\\r\\n      <ng-container *ngIf='object as user'>\\r\\n        <mat-form-field>\\r\\n          <input matInput type=\\\"text\\\" placeholder='Name' [ngModel]='user.name' name='name' required [readonly]='f.submitted'>\\r\\n        </mat-form-field>\\r\\n        <mat-form-field>\\r\\n          <input matInput type=\\\"text\\\" placeholder='User name' [ngModel]='user.username' name='username' required [readonly]='f.submitted'>\\r\\n        </mat-form-field>\\r\\n        <mat-form-field>\\r\\n          <mat-select placeholder='Role' [ngModel]='user.role' name='role' required [disabled]='f.submitted'>\\r\\n            <mat-option *ngFor='let role of roles' [value]='role'>{{ role }}</mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n      </ng-container>\\r\\n    </mat-card-content>\\r\\n    <mat-card-actions>\\r\\n      <button mat-button type='submit' [disabled]='f.invalid || f.submitted'>Submit</button>\\r\\n      <button mat-button type='button' routerLink='../../' [disabled]='f.submitted'>Cancel</button>\\r\\n    </mat-card-actions>\\r\\n  </mat-card>\\r\\n</form>\"","module.exports = \"\"","import { Component } from \"@angular/core\";\r\nimport { User } from \"../../../shared/classes/user\";\r\nimport { Router, ActivatedRoute } from \"@angular/router\";\r\nimport { UsersService } from \"../users.service\";\r\nimport { NotificationsService } from './../../../notifications/notifications.service';\r\nimport { Update } from \"../../../shared/classes/update\";\r\n\r\n@Component({\r\n  selector: \"app-update\",\r\n  templateUrl: \"./update.component.html\",\r\n  styleUrls: [\"./update.component.scss\", \"../../styles/crud.scss\"]\r\n})\r\nexport class UpdateComponent extends Update<User> {\r\n  roles = [\r\n    \"Customer\",\r\n    \"Admin\"\r\n  ];\r\n  constructor(\r\n    public service: UsersService,\r\n    public notifications: NotificationsService,\r\n    public router: Router,\r\n    public route: ActivatedRoute\r\n  ) {\r\n    super(service, notifications, router, route);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { DeleteComponent } from './delete/delete.component';\r\nimport { UpdateComponent } from './update/update.component';\r\nimport { CreateComponent } from './create/create.component';\r\nimport { UsersComponent } from './users.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '', component: UsersComponent, children: [\r\n      { path: 'add', component: CreateComponent },\r\n      { path: 'update', component: UpdateComponent },\r\n      { path: 'update/:_id', component: UpdateComponent },\r\n      { path: 'delete', component: DeleteComponent },\r\n      { path: 'delete/:_id', component: DeleteComponent },\r\n    ]\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class UsersRoutingModule { }\r\n","module.exports = \"<router-outlet></router-outlet>\\r\\n<mat-card>\\r\\n  <mat-card-header>\\r\\n    <mat-card-title>\\r\\n      <h2>Users</h2>\\r\\n    </mat-card-title>\\r\\n  </mat-card-header>\\r\\n  <mat-card-content>\\r\\n    <app-list></app-list>\\r\\n  </mat-card-content>\\r\\n</mat-card>\"","module.exports = \"router-outlet {\\n  margin-bottom: 15px; }\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.scss']\n})\nexport class UsersComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { UsersService } from \"./users.service\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { SharedModule } from \"./../../shared/shared.module\";\r\n\r\nimport { UsersRoutingModule } from \"./users-routing.module\";\r\nimport { UsersComponent } from \"./users.component\";\r\nimport { CreateComponent } from \"./create/create.component\";\r\nimport { UpdateComponent } from \"./update/update.component\";\r\nimport { DeleteComponent } from \"./delete/delete.component\";\r\nimport { ListComponent } from \"./list/list.component\";\r\n\r\n@NgModule({\r\n  imports: [SharedModule, UsersRoutingModule],\r\n  declarations: [\r\n    UsersComponent,\r\n    CreateComponent,\r\n    UpdateComponent,\r\n    DeleteComponent,\r\n    ListComponent\r\n  ],\r\n  providers: [UsersService]\r\n})\r\nexport class UsersModule {}\r\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { User } from \"../../shared/classes/user\";\r\nimport { DAO } from \"../../shared/classes/dao\";\r\n@Injectable({\r\n  providedIn: \"root\"\r\n})\r\nexport class UsersService extends DAO<User> {\r\n  constructor(httpClient: HttpClient) {\r\n    super(httpClient, \"users\", \"user\", \"Users\");\r\n  }\r\n}\r\n","export class User {\r\n  constructor(\r\n    public _id?: string,\r\n    public name?: string,\r\n    public username?: string,\r\n    public email?: string,\r\n    public role?: string,\r\n    public createdAt?: Date,\r\n    public password?: string\r\n  ) {}\r\n}\r\n"],"sourceRoot":""}