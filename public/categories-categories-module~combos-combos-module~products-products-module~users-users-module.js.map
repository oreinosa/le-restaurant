{"version":3,"sources":["webpack:///./src/app/admin/styles/crud.scss","webpack:///./src/app/admin/styles/list.scss","webpack:///./src/app/shared/classes/create.ts","webpack:///./src/app/shared/classes/dao.ts","webpack:///./src/app/shared/classes/delete.ts","webpack:///./src/app/shared/classes/list.ts","webpack:///./src/app/shared/classes/update.ts"],"names":[],"mappings":"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","file":"categories-categories-module~combos-combos-module~products-products-module~users-users-module.js","sourcesContent":["module.exports = \".mat-card {\\n  margin-bottom: 15px; }\\n\\n.mat-form-field {\\n  width: 100%; }\\n\"","module.exports = \".mat-table, .mat-paginator {\\n  background-color: inherit; }\\n\\n.mat-header-cell {\\n  color: grey !important; }\\n\\n.mat-cell, .mat-header-cell {\\n  padding: 5px 10px; }\\n\\n.mat-cell {\\n  overflow-wrap: break-word; }\\n\\n.table-container {\\n  position: relative;\\n  max-height: 500px;\\n  overflow: auto; }\\n\\ntable {\\n  width: 100%; }\\n\"","import { Router, ActivatedRoute } from \"@angular/router\";\r\nimport { NotificationsService } from \"./../../notifications/notifications.service\";\r\nimport { NgForm } from \"@angular/forms\";\r\nimport { HttpErrorResponse } from \"@angular/common/http\";\r\nimport { DAO } from \"./dao\";\r\nimport { Upload } from \"../../upload/upload\";\r\n\r\nexport class Create<T> {\r\n  constructor(\r\n    public service: DAO<T>,\r\n    public notifications: NotificationsService,\r\n    public router: Router,\r\n    public route: ActivatedRoute\r\n  ) {}\r\n\r\n  onSubmit(form: NgForm) {\r\n    const product: T = form.value;\r\n    this.service.create(product).subscribe(\r\n      (addedObject: T) => {\r\n        console.log(addedObject);\r\n        this.notifications.show(\r\n          `Added ${this.service.className} (ID: ${addedObject[\"_id\"]}`,\r\n          this.service.collectionName,\r\n          \"success\"\r\n        );\r\n        this.router.navigate([\"../\"], { relativeTo: this.route });\r\n      },\r\n      (e: HttpErrorResponse) => {\r\n        console.log(e.error);\r\n        this.notifications.show(e.error, this.service.collectionName, \"danger\");\r\n        form.resetForm();\r\n      }\r\n    );\r\n  }\r\n}\r\n","import { BehaviorSubject, Observable } from \"rxjs\";\r\nimport { map, tap } from \"rxjs/operators\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { environment } from \"../../../environments/environment\";\r\nimport { Upload } from \"../../upload/upload\";\r\n\r\nexport abstract class DAO<T> {\r\n  private selectedProductSubject = new BehaviorSubject<T>(null);\r\n  public objects = new BehaviorSubject<T[]>([]);\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private api: string,\r\n    public className: string,\r\n    public collectionName: string\r\n  ) {\r\n    this.api = environment.api + api + \"/\";\r\n  }\r\n\r\n  getSelectedObject(): Observable<T> {\r\n    return this.selectedProductSubject.asObservable();\r\n  }\r\n\r\n  setSelectedObject(object: T): void {\r\n    return this.selectedProductSubject.next(object);\r\n  }\r\n\r\n  isObjectSelected(): boolean {\r\n    return !!this.selectedProductSubject.getValue();\r\n  }\r\n\r\n  all() {\r\n    return this.http.get<any>(this.api).pipe(\r\n      map(res => {\r\n        // console.log(res.data);\r\n        return res.data as T[];\r\n      }),\r\n      tap(objects => {\r\n        this.objects.next(objects);\r\n      })\r\n    );\r\n  }\r\n\r\n  one(_id: string) {\r\n    return this.http.get<any>(this.api + _id).pipe(\r\n      map(res => {\r\n        return res.data as T;\r\n      })\r\n    );\r\n  }\r\n\r\n  create(newObject: T) {\r\n    return this.http.post<any>(this.api, newObject).pipe(\r\n      map(res => {\r\n        return res.data as T;\r\n      }),\r\n      tap(addedProduct => {\r\n        const objects = this.objects.getValue().slice();\r\n        objects.push(addedProduct);\r\n        this.objects.next(objects);\r\n      })\r\n    );\r\n  }\r\n\r\n  update(_id: string, object: T) {\r\n    return this.http.put<any>(this.api + _id, object).pipe(\r\n      map(res => {\r\n        return res.data as T;\r\n      }),\r\n      tap(editedProduct => {\r\n        const objects = this.objects.getValue().slice();\r\n        const index = objects.findIndex(\r\n          _object => _object[\"_id\"] === editedProduct[\"_id\"]\r\n        );\r\n        objects[index] = editedProduct;\r\n        this.objects.next(objects);\r\n      })\r\n    );\r\n  }\r\n\r\n  delete(_id: string) {\r\n    return this.http.delete<any>(this.api + _id).pipe(\r\n      tap(() => {\r\n        const objects = this.objects.getValue().slice();\r\n        const index = objects.findIndex(_object => _object[\"_id\"] === _id);\r\n        objects.splice(index, 1);\r\n        this.objects.next(objects);\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { Router, ActivatedRoute } from \"@angular/router\";\r\nimport { OnInit, OnDestroy } from \"@angular/core\";\r\nimport { map, tap, filter, takeUntil, switchMap } from \"rxjs/operators\";\r\nimport { NotificationsService } from \"../../notifications/notifications.service\";\r\nimport { HttpErrorResponse } from \"@angular/common/http\";\r\nimport { Subject } from \"rxjs\";\r\nimport { DAO } from \"./dao\";\r\n\r\nexport class Delete<T> implements OnInit, OnDestroy {\r\n  private ngUnsubscribe = new Subject();\r\n  object: T;\r\n  constructor(\r\n    public service: DAO<T>,\r\n    public notifications: NotificationsService,\r\n    public router: Router,\r\n    public route: ActivatedRoute\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.route.paramMap\r\n      .pipe(\r\n        takeUntil(this.ngUnsubscribe),\r\n        map(params => params.get(\"_id\")),\r\n        tap(\r\n          _id =>\r\n            !!_id\r\n              ? false\r\n              : this.router.navigate([\"../\"], { relativeTo: this.route })\r\n        ),\r\n        filter(_id => !!_id),\r\n        switchMap(_id => this.service.isObjectSelected()\r\n          ? this.service.getSelectedObject()\r\n          : this.service.one(_id)),\r\n        takeUntil(this.ngUnsubscribe)\r\n      )\r\n      .subscribe(object => this.object = object);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.ngUnsubscribe.next();\r\n    this.ngUnsubscribe.complete();\r\n  }\r\n\r\n  onSubmit() {\r\n    this.service.delete(this.object[\"_id\"]).subscribe(\r\n      () => {\r\n        this.notifications.show(\r\n          `Deleted ${this.service.className} successfully`,\r\n          this.service.collectionName,\r\n          \"success\"\r\n        );\r\n      },\r\n      (e: HttpErrorResponse) => {\r\n        this.notifications.show(e.error, this.service.collectionName, \"danger\");\r\n      },\r\n      () => this.router.navigate([\"../../\"], { relativeTo: this.route })\r\n    );\r\n  }\r\n}\r\n","import { OnInit, OnDestroy, ViewChild } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { switchMap, tap, takeUntil } from \"rxjs/operators\";\r\nimport { Subject } from \"rxjs\";\r\nimport { DAO } from \"./dao\";\r\nimport { MatTableDataSource, MatPaginator, MatSort } from \"@angular/material\";\r\n\r\nexport class List<T> implements OnInit, OnDestroy {\r\n  private ngUnsubscribe = new Subject();\r\n  public dataSource = new MatTableDataSource<T>([]);\r\n  loading = true;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n\r\n  // public objects: T[];\r\n\r\n  constructor(\r\n    public service: DAO<T>,\r\n    public router: Router,\r\n    public displayedColumns: string[]\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n    this.service\r\n      .all()\r\n      .pipe(\r\n        tap(() => this.loading = false),\r\n        switchMap(() => this.service.objects),\r\n        takeUntil(this.ngUnsubscribe),\r\n        tap(objects => console.log(`${this.service.collectionName} : `, objects)),\r\n    )\r\n      .subscribe((objects: T[]) => this.dataSource.data = objects);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.ngUnsubscribe.next();\r\n    this.ngUnsubscribe.complete();\r\n  }\r\n\r\n  onAction(action: string, object: T) {\r\n    let _id = \"\";\r\n    if (object) {\r\n      _id = object['_id'];\r\n      this.service.setSelectedObject(object);\r\n    }\r\n    this.router.navigate([\"admin\", this.service.collectionName.toLowerCase(), action, _id]);\r\n  }\r\n}\r\n","import { OnInit, OnDestroy } from \"@angular/core\";\r\nimport { Router, ActivatedRoute } from \"@angular/router\";\r\nimport { map, filter, tap, switchMap, takeUntil } from \"rxjs/operators\";\r\nimport { Subject } from \"rxjs\";\r\nimport { NgForm } from \"@angular/forms\";\r\nimport { NotificationsService } from \"./../../notifications/notifications.service\";\r\nimport { HttpErrorResponse } from \"@angular/common/http\";\r\nimport { DAO } from \"./dao\";\r\n\r\nexport class Update<T> implements OnInit, OnDestroy {\r\n  private ngUnsubscribe = new Subject();\r\n  object: T;\r\n  _id: string;\r\n  constructor(\r\n    public service: DAO<T>,\r\n    public notifications: NotificationsService,\r\n    public router: Router,\r\n    public route: ActivatedRoute\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.route.paramMap\r\n      .pipe(\r\n        map(params => params.get(\"_id\")),\r\n        tap(_id => {\r\n          this._id = _id;\r\n          if (_id === null || !(_id as string)) {\r\n            this.router.navigate([\"../\"], { relativeTo: this.route });\r\n          }\r\n        }),\r\n        filter(_id => !!_id),\r\n        switchMap(\r\n          _id =>\r\n            this.service.isObjectSelected()\r\n              ? this.service.getSelectedObject()\r\n              : this.service.one(_id)\r\n        ),\r\n        takeUntil(this.ngUnsubscribe)\r\n        // tap(object => console.log(object))\r\n      )\r\n      .subscribe(object => (this.object = object));\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.ngUnsubscribe.next();\r\n    this.ngUnsubscribe.complete();\r\n  }\r\n\r\n  onSubmit(form: NgForm) {\r\n    const object: T = form.value;\r\n    this.service.update(this._id, object).subscribe(\r\n      (editedObject: T) => {\r\n        this.notifications.show(\r\n          `Edited ${this.service.className} (ID: ${editedObject[\"_id\"]}`,\r\n          this.service.collectionName,\r\n          \"success\"\r\n        );\r\n        this.router.navigate([\"../../\"], { relativeTo: this.route });\r\n      },\r\n      (e: HttpErrorResponse) => {\r\n        this.notifications.show(e.error, this.service.collectionName, \"danger\");\r\n        form.resetForm(object);\r\n      }\r\n    );\r\n  }\r\n}\r\n"],"sourceRoot":""}